---
layout: post
title:  "Spring Security JWT 기반 인증인가 구현기"
excerpt: "Spring Security에서 제공하는 OAuth2 모듈을 사용해보자."
date: "2022-12-27"


author: zoooo-hs
tags: [JWT, Spring, Spring boot, Spring Security, OAuth2, Authentication, Authorization, Java]

---

* TOC
{:toc}

[게시글에 사용된 소스코드]()

# 배경

리소스 서비스를 구현하는 과정에 서비스 호출에 대한 인증인가를 붙이는 일은 당연하게 이뤄지고 있다. 인증인가에 대해 간단히 설명하면 인증인가는 "인증"과 "인가" 두 단어로 구성된 합성어이다. 인증(Authentication)은 사용자 요청이 어떤 사용자로 부터 왔는지 신원 확인을 위한 절차로 특정 장소 입장에 준비물로 신분증을 요구 하듯 리소스 요청에 인증된 토큰, 세션 정보를 요구한다. 이후 전달 받은 신분증이 위조 되었거나 유효기간이 지났는지 등을 확인한다. 인가(Athorization)는 리소스 요청에 대한 권한 확인 과정이다. 술을 구입하기 위해 신분증을 통해 성인임을 확인 하듯, 요청한 사용자에 대한 권한 정보를 토대로 해당 요청에 대한 응답을 받을 수 있는지 없는지 확인한다.

흔히 인증이라고 생각하면 ID, Password를 입력해 로그인하는 과정을 생각할 수 있다. 틀린 말은 아닌것이 특정 사용자임를 가리키는 ID와 ID 소유에 대한 증명을 위해 Password를 전달하고, 서비스 제공자는 DB에 담긴 ID, Password 정보와 비교하여 유효한 정보인지 검사한다. 여기에 인가를 더하면, ID에 어떤 권한이 연결되어있는지 확인하고 요청한 리소스가 해당 권한으로 얻을 수 있는지 확인하면 된다.

이렇게 ID, Password 만으로도 훌륭한 인증인가를 구현할 수 있다. 그러나 문제가 조금 있는데(조금이 아니었다?) 그 중 하나는 매 요청마다 ID, Password를 보내야한다는 것이다. 